// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TCloudFileSync.Infra.Contexto;

#nullable disable

namespace TCloudFileSync.Infra.Migrations
{
    [DbContext(typeof(SqliteContexto))]
    [Migration("20230906104751_DSUPXVEN-7850")]
    partial class DSUPXVEN7850
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("TCloudFileSync.Infra.Entidade.HistoricoSincronismo", b =>
            {
                b.Property<int>("Id")
                    .HasColumnName("SeqHistorico")
                    .HasColumnType("integer")
                    .ValueGeneratedOnAdd();

                b.Property<string>("Arquivo")
                    .HasColumnName("DescArquivo")
                    .HasComment("Descrição arquivo")
                    .HasColumnType("varchar2")
                    .IsRequired();

                b.Property<string>("FluxoLocalParaNuvem")
                    .HasColumnName("IndLocalParaNuvem")
                    .HasComment("S para integrar arquivo local para nuvem | N para integrar arquivo nuvem para local")
                    .HasDefaultValue("S")
                    .HasColumnType("varchar2")
                    .HasMaxLength(1)
                    .IsRequired();

                b.Property<string>("CaminhoArquivoLocal")
                    .HasColumnName("DescCaminhoLocal")
                    .HasComment("Caminho de pasta local sem \\ no final")
                    .HasColumnType("varchar2")
                    .IsRequired();

                b.Property<string>("CaminhoArquivoNuvem")
                    .HasColumnName("DescCaminhoNuvem")
                    .HasComment("Caminho de pasta na nuvem sem / no final")
                    .HasColumnType("varchar2")
                    .IsRequired();

                b.Property<int>("Tamanho")
                    .HasColumnName("DescTamanho")
                    .HasComment("Discrimina o tamanho do arquivo transitado.")
                    .HasColumnType("integer")
                    .IsRequired();

                b.Property<string>("DtaMovimento")
                    .HasColumnName("DtaMovimento")
                    .HasComment("Data da movimentação do arquivo.")
                    .HasColumnType("varchar2")
                    .IsRequired();

                b.Property<string>("HorMovimento")
                    .HasColumnName("HorMovimento")
                    .HasComment("Hora da movimentação do arquivo.")
                    .HasColumnType("varchar2")
                    .IsRequired();

                b.Property<string>("Situacao")
                    .HasColumnName("Situacao")
                    .HasComment("Situação do arquivo (FALHA, ENVIANDO, SINCRONIZADA).")
                    .HasColumnType("varchar2")
                    .IsRequired();

                b.HasKey("Id")
                    .HasName("ECM_HISTORICOSINCRONISMOPK");

                b.ToTable("ECM_HISTORICOSINCRONISMO", (string)null);
            });
#pragma warning restore 612, 618
        }
    }
}
